'use client'

import { motion } from 'framer-motion'
import { BookOpen, Clock, Calendar, Tag, Search, Filter, User } from 'lucide-react'
import { useState } from 'react'
import Card from '@/components/common/Card'
import { mockBlogPosts } from '@/constants/mockData'
import { fadeInUp, staggerContainer } from '@/utils/animations'

export default function BlogPage() {
  const [searchTerm, setSearchTerm] = useState('')
  const [selectedCategory, setSelectedCategory] = useState('all')

  const categories = ['all', 'Èü≥Ê•ΩÂà∂‰Ωú', '„ÅäÈÖí', '„ÉÅ„É•„Éº„Éà„É™„Ç¢„É´', '„É©„Ç§„Éï„Çπ„Çø„Ç§„É´']

  const filteredPosts = mockBlogPosts.filter(post => {
    const matchesSearch = post.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         post.excerpt.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         post.tags.some(tag => tag.toLowerCase().includes(searchTerm.toLowerCase()))
    const matchesCategory = selectedCategory === 'all' || post.category === selectedCategory
    return matchesSearch && matchesCategory
  })

  const getCategoryIcon = (category: string) => {
    switch (category) {
      case 'Èü≥Ê•ΩÂà∂‰Ωú': return 'üéµ'
      case '„ÅäÈÖí': return 'üç∂'
      case '„ÉÅ„É•„Éº„Éà„É™„Ç¢„É´': return 'üìö'
      case '„É©„Ç§„Éï„Çπ„Çø„Ç§„É´': return '‚ú®'
      default: return 'üìù'
    }
  }

  const getCategoryColor = (category: string) => {
    switch (category) {
      case 'Èü≥Ê•ΩÂà∂‰Ωú': return 'bg-melody-purple text-white'
      case '„ÅäÈÖí': return 'bg-melody-pink text-white'
      case '„ÉÅ„É•„Éº„Éà„É™„Ç¢„É´': return 'bg-melody-sky text-white'
      case '„É©„Ç§„Éï„Çπ„Çø„Ç§„É´': return 'bg-green-500 text-white'
      default: return 'bg-gray-500 text-white'
    }
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-melody-sky via-white to-melody-purple/20 pt-20">
      <div className="container mx-auto px-4 py-12">
        {/* „Éò„ÉÉ„ÉÄ„Éº„Çª„ÇØ„Ç∑„Éß„É≥ */}
        <motion.div
          variants={staggerContainer}
          initial="hidden"
          animate="visible"
          className="text-center mb-16"
        >
          <motion.h1 
            variants={fadeInUp}
            className="text-4xl md:text-5xl font-bold mb-6 bg-gradient-to-r from-melody-purple to-melody-pink bg-clip-text text-transparent"
          >
            Music Blog
          </motion.h1>
          <motion.p 
            variants={fadeInUp}
            className="text-xl text-gray-600 max-w-2xl mx-auto"
          >
            Èü≥Ê•ΩÂà∂‰Ωú„ÅÆË£èÂÅ¥„ÇÑ„ÅäÈÖí„ÅÆË©±È°å„Åæ„Åß<br/>
            „ÅÇ„Åä„Å∞„ÅÆÊÉ≥„ÅÑ„ÇÑÊó•Â∏∏„ÇíÁ∂¥„Å£„Åü„Éñ„É≠„Ç∞„Åß„Åô‚ô™
          </motion.p>
        </motion.div>

        {/* Áµ±Ë®àÊÉÖÂ†± */}
        <motion.section 
          variants={staggerContainer}
          initial="hidden"
          animate="visible"
          className="mb-12"
        >
          <div className="grid gap-6 md:grid-cols-4">
            <motion.div variants={fadeInUp}>
              <Card className="text-center">
                <BookOpen className="w-8 h-8 text-melody-purple mx-auto mb-2" />
                <div className="text-2xl font-bold text-gray-800 mb-1">{mockBlogPosts.length}</div>
                <div className="text-sm text-gray-600">Á∑èË®ò‰∫ãÊï∞</div>
              </Card>
            </motion.div>
            
            <motion.div variants={fadeInUp}>
              <Card className="text-center">
                <Tag className="w-8 h-8 text-melody-pink mx-auto mb-2" />
                <div className="text-2xl font-bold text-gray-800 mb-1">{categories.length - 1}</div>
                <div className="text-sm text-gray-600">„Ç´„ÉÜ„Ç¥„É™„Éº</div>
              </Card>
            </motion.div>
            
            <motion.div variants={fadeInUp}>
              <Card className="text-center">
                <User className="w-8 h-8 text-melody-sky mx-auto mb-2" />
                <div className="text-2xl font-bold text-gray-800 mb-1">Áå´Á©∫„ÅÇ„Åä„Å∞</div>
                <div className="text-sm text-gray-600">„É©„Ç§„Çø„Éº</div>
              </Card>
            </motion.div>
            
            <motion.div variants={fadeInUp}>
              <Card className="text-center">
                <Calendar className="w-8 h-8 text-green-500 mx-auto mb-2" />
                <div className="text-2xl font-bold text-gray-800 mb-1">2024</div>
                <div className="text-sm text-gray-600">ÈñãÂßãÂπ¥</div>
              </Card>
            </motion.div>
          </div>
        </motion.section>

        {/* Ê§úÁ¥¢„Éª„Éï„Ç£„É´„Çø„Éº */}
        <motion.section 
          variants={staggerContainer}
          initial="hidden"
          animate="visible"
          className="mb-12"
        >
          <motion.div variants={fadeInUp}>
            <Card>
              <div className="flex flex-col md:flex-row gap-4">
                {/* Ê§úÁ¥¢„Éê„Éº */}
                <div className="flex-1 relative">
                  <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5" />
                  <input
                    type="text"
                    placeholder="Ë®ò‰∫ã„Çø„Ç§„Éà„É´„ÇÑ„Çø„Ç∞„ÅßÊ§úÁ¥¢..."
                    value={searchTerm}
                    onChange={(e) => setSearchTerm(e.target.value)}
                    className="w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-melody-purple focus:border-transparent"
                  />
                </div>
                
                {/* „Ç´„ÉÜ„Ç¥„É™„Éº„Éï„Ç£„É´„Çø„Éº */}
                <div className="flex gap-2">
                  <Filter className="w-5 h-5 text-gray-400 mt-3" />
                  {categories.map((category) => (
                    <button
                      key={category}
                      onClick={() => setSelectedCategory(category)}
                      className={`px-4 py-2 rounded-lg transition-colors ${
                        selectedCategory === category
                          ? 'bg-melody-purple text-white'
                          : 'bg-gray-100 text-gray-600 hover:bg-gray-200'
                      }`}
                    >
                      {category === 'all' ? 'ÂÖ®„Å¶' : category}
                    </button>
                  ))}
                </div>
              </div>
            </Card>
          </motion.div>
        </motion.section>

        {/* „Éñ„É≠„Ç∞Ë®ò‰∫ã‰∏ÄË¶ß */}
        <motion.section 
          variants={staggerContainer}
          initial="hidden"
          animate="visible"
          className="mb-16"
        >
          {filteredPosts.length > 0 ? (
            <div className="space-y-8">
              {filteredPosts.map((post, index) => (
                <motion.div key={post.id} variants={fadeInUp}>
                  <Card className="h-full group cursor-pointer hover:shadow-lg transition-shadow">
                    <div className="flex flex-col lg:flex-row gap-6">
                      {/* „Çµ„É†„Éç„Ç§„É´ */}
                      <div className="lg:w-1/3">
                        <div className="relative">
                          <img 
                            src={post.thumbnail} 
                            alt={post.title}
                            className="w-full h-48 lg:h-full object-cover rounded-lg"
                          />
                          <div className={`absolute top-2 left-2 px-2 py-1 rounded text-sm font-medium ${getCategoryColor(post.category)}`}>
                            {getCategoryIcon(post.category)} {post.category}
                          </div>
                        </div>
                      </div>
                      
                      {/* Ë®ò‰∫ãÊÉÖÂ†± */}
                      <div className="lg:w-2/3">
                        <h3 className="font-bold text-xl mb-3 text-gray-800 group-hover:text-melody-purple transition-colors">
                          {post.title}
                        </h3>
                        <p className="text-gray-600 mb-4 line-clamp-3">{post.excerpt}</p>
                        
                        {/* „Çø„Ç∞ */}
                        <div className="flex flex-wrap gap-2 mb-4">
                          {post.tags.map((tag) => (
                            <span 
                              key={tag}
                              className="bg-gray-100 text-gray-600 px-2 py-1 rounded text-sm"
                            >
                              #{tag}
                            </span>
                          ))}
                        </div>
                        
                        {/* „É°„ÇøÊÉÖÂ†± */}
                        <div className="flex flex-wrap gap-4 text-sm text-gray-500 mb-4">
                          <div className="flex items-center">
                            <User className="w-4 h-4 mr-2" />
                            {post.author}
                          </div>
                          <div className="flex items-center">
                            <Calendar className="w-4 h-4 mr-2" />
                            {post.date}
                          </div>
                          <div className="flex items-center">
                            <Clock className="w-4 h-4 mr-2" />
                            {post.readTime}
                          </div>
                        </div>
                        
                        <button className="bg-melody-purple hover:bg-melody-purple/80 text-white px-6 py-2 rounded-full transition-colors text-sm">
                          Á∂ö„Åç„ÇíË™≠„ÇÄ
                        </button>
                      </div>
                    </div>
                  </Card>
                </motion.div>
              ))}
            </div>
          ) : (
            <motion.div variants={fadeInUp}>
              <Card className="text-center py-12">
                <div className="text-6xl mb-4">üîç</div>
                <h3 className="text-xl font-bold mb-2 text-gray-800">Ë®ò‰∫ã„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì</h3>
                <p className="text-gray-600">
                  Ê§úÁ¥¢Êù°‰ª∂„ÇíÂ§âÊõ¥„Åó„Å¶„ÇÇ„ÅÜ‰∏ÄÂ∫¶„ÅäË©¶„Åó„Åè„Å†„Åï„ÅÑ
                </p>
              </Card>
            </motion.div>
          )}
        </motion.section>

        {/* „Ç´„ÉÜ„Ç¥„É™„ÉºÂà•Ë®ò‰∫ãÊï∞ */}
        <motion.section 
          variants={staggerContainer}
          initial="hidden"
          animate="visible"
          className="mb-16"
        >
          <motion.h2 variants={fadeInUp} className="text-3xl font-bold text-gray-800 mb-8 text-center">
            „Ç´„ÉÜ„Ç¥„É™„ÉºÂà•Ë®ò‰∫ã
          </motion.h2>
          
          <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-4">
            {categories.slice(1).map((category) => {
              const categoryPosts = mockBlogPosts.filter(post => post.category === category)
              
              return (
                <motion.div key={category} variants={fadeInUp}>
                  <Card className="text-center h-full group cursor-pointer" onClick={() => setSelectedCategory(category)}>
                    <div className="text-4xl mb-4">{getCategoryIcon(category)}</div>
                    <h3 className="text-xl font-bold mb-2 text-gray-800 group-hover:text-melody-purple transition-colors">
                      {category}
                    </h3>
                    <div className="text-2xl font-bold text-melody-purple mb-1">
                      {categoryPosts.length}
                    </div>
                    <div className="text-sm text-gray-600">Ë®ò‰∫ã</div>
                  </Card>
                </motion.div>
              )
            })}
          </div>
        </motion.section>

        {/* „ÅÇ„Åä„Å∞„Åã„Çâ„ÅÆ„É°„ÉÉ„Çª„Éº„Ç∏ */}
        <motion.section 
          variants={staggerContainer}
          initial="hidden"
          animate="visible"
        >
          <motion.div variants={fadeInUp}>
            <Card className="text-center bg-gradient-to-r from-melody-purple/5 to-melody-pink/5">
              <div className="text-4xl mb-4">‚úçÔ∏è</div>
              <h3 className="text-2xl font-bold mb-4 text-gray-800">„Éñ„É≠„Ç∞„Å´„Å§„ÅÑ„Å¶</h3>
              <p className="text-gray-600 mb-6 max-w-3xl mx-auto">
                „Åì„ÅÆ„Éñ„É≠„Ç∞„Åß„ÅØ„ÄÅÊ•ΩÊõ≤Âà∂‰Ωú„ÅÆË£èË©±„ÇÑÂà∂‰ΩúÈÅéÁ®ã„ÄÅDTM„ÅÆ„ÉÜ„ÇØ„Éã„ÉÉ„ÇØ„ÄÅ
                „ÅäÊ∞ó„Å´ÂÖ•„Çä„ÅÆ„ÅäÈÖí„ÅÆË©±È°å„ÄÅÊó•Â∏∏„ÅÆÂá∫Êù•‰∫ã„Å™„Å©„ÄÅÊßò„ÄÖ„Å™„Åì„Å®„ÇíÊõ∏„ÅÑ„Å¶„ÅÑ„Åæ„Åô„ÄÇ
                Èü≥Ê•Ω„Å´ËààÂë≥„ÅÆ„ÅÇ„ÇãÊñπ„ÄÅ„ÅäÈÖíÂ•Ω„Åç„ÅÆÊñπ„ÄÅ„Åù„Åó„Å¶„ÅÇ„Åä„Å∞„ÅÆ„Åì„Å®„Çí„ÇÇ„Å£„Å®Áü•„Çä„Åü„ÅÑÊñπ„ÄÅ
                „Åú„Å≤„ÅäÊ∞óËªΩ„Å´Ë™≠„Çì„Åß„Åè„Å†„Åï„ÅÑ„Å≠‚ô™
              </p>
              <div className="flex flex-col sm:flex-row gap-4 justify-center">
                <button className="bg-melody-purple hover:bg-melody-purple/80 text-white px-6 py-3 rounded-full transition-colors">
                  Ë®ò‰∫ã„Çí„É™„ÇØ„Ç®„Çπ„Éà
                </button>
                <a 
                  href="/community/discord"
                  className="border border-melody-purple text-melody-purple hover:bg-melody-purple hover:text-white px-6 py-3 rounded-full transition-colors"
                >
                  ÊÑüÊÉ≥„Çí„Ç∑„Çß„Ç¢
                </a>
              </div>
            </Card>
          </motion.div>
        </motion.section>
      </div>
    </div>
  )
} 